% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/rasterize.R
\name{rasterize.gdal}
\alias{rasterize.gdal}
\title{High performance rasterize function using gdalUtils.}
\usage{
rasterize.gdal(x, field, res = 10000, extent = NULL)
}
\arguments{
\item{x}{a Spatial*DataFrame objects.}

\item{field}{character.The column name of the variable to be transferred}

\item{res}{numeric.Resolution of the output raster}

\item{extent}{extent object.Spatial extent of output raster.If missing, the extent of x will be used.}
}
\value{
RasterLayer
}
\description{
This function rasterize a vector data by gdal binary utils. This is a wrap function of gdalUtils::gdal_rasterize.
}
\examples{
###############################
# rasterize points
###############################
r <- raster(ncols=36, nrows=18)
n <- 1000
x <- runif(n) * 360 - 180
y <- runif(n) * 180 - 90
xy <- cbind(x, y)
# with a SpatialPointsDataFrame
vals <- 1:n
p <- data.frame(xy, name=vals)
coordinates(p) <- ~x+y
## If you are using windows,you must set local GDAL installation options before running function###
#Not run:
#gdal_setInstallation(search_path = 'the path of OSGeo4W64/bin',rescan = T)
r2 <- rasterize.gdal(p, field = 'name', res =res(r)[1],extent=extent(r))
}

